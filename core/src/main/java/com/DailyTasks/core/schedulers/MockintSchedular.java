package com.DailyTasks.core.schedulers;


import org.osgi.service.component.annotations.Activate;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Deactivate;
import org.osgi.service.metatype.annotations.Designate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component(service = Runnable.class,immediate = true)
@Designate(ocd=MockintConfiguration.class)


public class MockintSchedular implements Runnable {
    private static final Logger log=LoggerFactory.getLogger(MockintSchedular.class);
    private String cronExpression;

@Activate
protected void activate(MockintConfiguration config){
    cronExpression = config.scheduler_expression();
    log.info("activated",cronExpression);
    
    
}

@Deactivate
protected void deactivate(){
    log.info("Deactivated");
}

@Override
public void run() {
    log.info("Executing scheduled task based on cron expression: {}", cronExpression);
}
    

}





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































